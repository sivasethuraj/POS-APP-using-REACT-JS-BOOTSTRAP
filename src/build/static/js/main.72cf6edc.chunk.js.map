{"version":3,"sources":["components/itemrequest/ItemRequestPage.js","components/mainmenupage/Box.js","components/mainmenupage/MainMenuPage.js","components/billing/IIndRow.js","components/billing/UpperTablePage.js","components/data.js","components/billing/Li.js","components/billing/NavigationMenu.js","components/billing/ImgTag.js","components/billing/GalleryPage.js","components/billing/Payable.js","components/billing/Istrow.js","components/billing/Billing.jsx","components/inventory/Inventory.jsx","components/salesreport/SalesReportPage1.jsx","components/inventory/Edit.jsx","App.js","reportWebVitals.js","index.js"],"names":["heightStyle","minHeight","ItemRequestPage","_useState","useState","_useState2","_slicedToArray","tableOfItems","setTableOfItems","_useState3","name","quantity","date","_useState4","newItem","setNewItem","updaterFunctions","inventoryArray","JSON","parse","localStorage","getItem","options","map","items","useEffect","existingArray","length","_toConsumableArray","resetValues","React","createElement","style","className","position","left","top","Link","to","aria-hidden","cursor","scope","colSpan","item","index","key","type","onClick","setItem","stringify","alert","requestItems","inventoryItems","id","newInventoryItem","_objectSpread","purchaseQuantity","parseInt","inventoryQuantity","inStock","sold","newTableOfItem","filter","concat","handleSubmit","Stack","spacing","Autocomplete","value","onChange","event","newInputValue","console","log","prev","renderInput","params","TextField","Object","assign","label","variant","size","htmlFor","e","target","min","Date","toLocaleDateString","find","newRequestObject","handleTableOfItems","Box","props","path","classname","padding","width","display","margin","textAlign","content","MainMenuPage","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","state","_inherits","_createClass","Component","IIndRow","tableRows","setTableRows","isValid","setIsValid","iName","iPrice","iQuantity","itemId","setItemid","idOptions","specifiedObject","userPressedId","newTableRow","quantityCheck","userQuantity","response","pointer","useRef","handleCalculatorValues","ref","Fragment","height","newValue","price","handleIdChange","onFocus","current","readOnly","newProduct","newTableRows","totalPrice","unitPrice","String","iId","slice","Button","bg","setBillingValues","tender","printContents","document","getElementById","innerHTML","originalContents","body","window","print","setPayablePage","navigate","useNavigate","UpperTablePage","_ref","wholeTotalPrice","setWholeTotalPrice","i","overflow","justifyContent","Tl","_props$item","clickedItemId","confirm","removeItem","data","Li","setItems","onclick","liclassname","aclassname","aria-current","aria","newItems","products","NavigationMenu","background","backgroundColor","data-bs-target","data-bs-slide","data-bs-interval","ImgTag","product","loading","src","alt","handleClick","GalleryPage","Payable","_useContext","useContext","InventoryContext","_props$billingValues","billingValues","amount","gstAmount","payable","change","parseFloat","toFixed","tableItem","stock","newSalesReportArray","soldQuantity","oldSalesReportArray","storeSalesReport","handlePay","Istrow","payablePage","Billing","_useState5","_useState6","_useState7","_useState8","maxWidth","prevPage","initialId","Inventory","showDateFilter","setShowDateFilter","filterType","setFilterType","from","customDateValue","setCustomDateValues","setClickedId","validTableOfItemArray","month","getMonth","year","getFullYear","actualTime","day","getDate","getLastWeeksDate","now","start","getDay","weekstart","weekend","lastday","setDate","endOfWeek","filteredTableRow","actualDate","filterLogic","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","autoComplete","data-bs-dismiss","data-bs-toggle","tr","deleteItem","SalesReportPage1","Edit","handleSave","setState","submitted","oldValues","clickedId","modifyValues","finalizedData","_this2","row","_row$","_this3","boxShadow","borderRadius","Navigate","disabled","disableSaveBtn","createContext","App","Provider","Routes","Route","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.72cf6edc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\n\nimport { Stack, Autocomplete, TextField } from '@mui/material'\n\nconst heightStyle = {\n    minHeight: '70vh',\n}\n\nfunction ItemRequestPage () {\n\n    const [ tableOfItems, setTableOfItems ] = useState( [] );\n    const [ newItem, setNewItem ] = useState( {\n        name: '',\n        quantity: 0,\n        date: '',\n    } );\n    const updaterFunctions = () => {\n        const inventoryArray = JSON.parse( localStorage.getItem( 'inventory' ) );\n        if ( inventoryArray ) {\n            return inventoryArray;\n        } else return false;\n    }\n    let options = updaterFunctions();\n    if ( options ) {\n        options = options.map( ( items ) => {\n            return items.name;\n        } );\n    }\n    // console.log( options );\n    useEffect( () => {\n        const existingArray = JSON.parse( localStorage.getItem( 'itemRequest' ) );\n        if ( existingArray && existingArray.length > 0 ) {\n\n            setTableOfItems( [\n                ...existingArray, ]\n            );\n        }\n    }, [] );\n    const style = {\n        minHeight: '98.7vh',\n    }\n    const resetValues = () => {\n        setNewItem( {\n            name: '',\n            quantity: 0,\n            date: '',\n        } )\n    }\n    // \n    const handleTableOfItems = () => {\n\n        const { name, quantity, date } = newItem;\n        if (\n            name === \"\" || name === \"null\" ||\n            quantity === \"\" ||\n            quantity <= 0 || date === ''\n        ) {\n            alert( \"Please Enter All Fields Correctly !\" );\n            return;\n        }\n        const inventoryArray = updaterFunctions();\n        if ( inventoryArray ) {\n            let newRequestItem = inventoryArray.find( ( item ) => {\n                if ( item.name === newItem.name ) {\n                    const newRequestObject = {\n                        name: item.name,\n                        quantity: parseInt( newItem.quantity ),\n                        date: newItem.date,\n                        inventoryQuantity: item.purchaseQuantity + parseInt( newItem.quantity ),\n                        id: item.id,\n                    }\n                    console.log( \"newRequestObject\", newRequestObject );\n\n                    localStorage.setItem( 'itemRequest', JSON.stringify( [ ...tableOfItems, {\n                        ...newRequestObject,\n                    } ] ) );\n                    setTableOfItems( ( prev ) => {\n                        return [ ...prev, {\n                            ...newRequestObject,\n                        } ]\n                    } );\n                }\n            } );\n\n            resetValues();\n            return;\n        }\n\n        const newTableOfItem = {\n            name: name, quantity: quantity, date: date\n        };\n        localStorage.setItem(\n            \"itemRequest2\",\n            JSON.stringify( [\n                ...tableOfItems,\n                {\n                    ...newTableOfItem,\n                },\n            ] )\n        );\n        setTableOfItems( ( prev ) => [\n            ...prev,\n            {\n                ...newTableOfItem,\n            },\n        ] );\n\n        resetValues();\n    };\n\n    const handleSubmit = () => {\n\n        if ( tableOfItems.length <= 0 ) {\n            alert( 'Add any request items !' );\n            return\n        }\n        const inventoryArray = updaterFunctions();\n        if ( inventoryArray ) {\n            tableOfItems.map( ( requestItems ) => {\n                inventoryArray.map( ( inventoryItems ) => {\n                    if ( requestItems.id === inventoryItems.id ) {\n                        const newInventoryItem = {\n                            ...inventoryItems,\n                            purchaseQuantity: parseInt( requestItems.inventoryQuantity ),\n                            inStock: parseInt( requestItems.inventoryQuantity ) - parseInt( inventoryItems.sold ),\n                        };\n\n                        let localStorageInventoryArray = JSON.parse( localStorage.getItem( \"inventory\" ) );\n\n                        const newTableOfItem = localStorageInventoryArray.filter( ( item ) => item.id !== inventoryItems.id );\n\n                        localStorage.setItem(\n                            \"inventory\",\n                            JSON.stringify( [\n                                ...newTableOfItem,\n                                {\n                                    ...newInventoryItem,\n                                },\n                            ] )\n                        );\n                    }\n                } );\n            } );\n        }\n        setTableOfItems( [] );\n        localStorage.setItem( 'itemRequest', JSON.stringify( [] ) );\n        resetValues();\n    }\n    // \n    return (\n        <div style={ style }>\n            <div className=\"container\" >\n                <div style={ heightStyle }>\n                    <div className=\"row \">\n                        <div style={ { position: \"absolute\", left: \"2rem\", top: \"1rem\" } }>\n                            <Link to=\"/\">\n                                <i\n                                    className=\"fa fa-home text-light bg-primary p-2 border border-dark rounded \"\n                                    aria-hidden=\"true\"\n                                    style={ { cursor: \"pointer\" } }\n                                ></i>\n                            </Link>\n                        </div>\n                        <div className=\"col text-center\">\n                            <h3>Item Request</h3>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">S.No</th>\n                                    <th scope=\"col\">Item Name</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">Expected Date</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                { ( !tableOfItems ) | ( tableOfItems.length === 0 ) ?\n                                    <tr>\n                                        <td className=\"mt-4 text-center\" colSpan={ 4 }>\n                                            <h3>No Items Found</h3>\n                                        </td>\n                                    </tr> :\n                                    tableOfItems && tableOfItems.map( ( item, index ) => {\n                                        return ( <tr key={ index + 1 }>\n                                            <td>{ index + 1 }</td>\n                                            <td>{ item.name }</td>\n                                            <td>{ item.quantity }</td>\n                                            <td>{ item.date }</td>\n                                        </tr> )\n                                    } )\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row d-flex justify-content-end\">\n                    <button\n                        className='col-2 col-md-1 btn btn-primary mx-3' type='reset'\n                        onClick={ () => {\n                            localStorage.setItem( 'itemRequest', JSON.stringify( [] ) );\n                            setTableOfItems( [] );\n                        } }>Reset</button>\n                    <button className='col-2 btn btn-primary col-md-1' type='submit'\n                        onClick={ () => handleSubmit() }>Submit</button>\n                </div>\n                <div className=\"row mt-3\">\n                    <div className=\"col-4 d-flex\">\n                        <label className=\"form-group col-4 text-center mt-2\"\n                        >Item Name</label>\n                        <Stack className='form-group col-8' spacing={ 2 }>\n                            <Autocomplete\n                                value={ ( newItem.name ) && newItem.name }\n                                onChange={ ( event, newInputValue ) => {\n                                    console.log( 'newInputValue', newInputValue )\n                                    setNewItem( ( prev ) => {\n                                        return {\n                                            ...prev,\n                                            name: newInputValue ? newInputValue : 'null',\n                                        }\n                                    } );\n                                } }\n                                options={ options ? options : [ 'no values' ] }\n                                renderInput={ ( params ) => <TextField { ...params } label=\"name\"\n                                    id=\"filled-hidden-label-small\"\n                                    variant=\"filled\"\n                                    size=\"small\" /> } />\n                        </Stack>\n                    </div><div className=\"col-3\">\n                        <label className=\"form-group col-4\" htmlFor=\"itemquantity\">Quantity</label>\n                        <input className=\"form-group col-8 py-2\" type=\"number\" id=\"itemquantity\"\n                            value={ newItem.quantity } onChange={ ( e ) => {\n                                if ( e.target.value ) {\n                                    setNewItem( ( prev ) => {\n                                        return {\n                                            ...prev,\n                                            quantity: parseInt( e.target.value ),\n                                        }\n                                    } )\n                                }\n                            } } />\n                    </div><div className=\"col-3\">\n                        <label className=\"form-group col-5\" htmlFor=\"itemdate\">Expected Date</label>\n                        <input className=\"form-group col-7 py-2\" id=\"itemdate\" type=\"date\"\n                            value={ newItem.date } onChange={ ( e ) => {\n                                if ( e.target.value ) {\n                                    setNewItem( ( prev ) => {\n                                        return {\n                                            ...prev,\n                                            date: e.target.value,\n                                        }\n                                    } )\n                                }\n                            } } min={ new Date().toLocaleDateString( 'en-ca' ) } /></div>\n                    <div className=\"ms-1 col-1 px-0\">\n                        <button className='btn btn-primary col-10' onClick={ () => {\n                            handleTableOfItems();\n                        } }>Add</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ItemRequestPage","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Box ( props ) {\n\n    const style = {\n        padding: '5rem',\n        width: '25rem',\n        display: 'inline-block',\n        margin: '1rem',\n        cursor: 'pointer',\n        textAlign: \"center\"\n    };\n\n    return (\n\n        <Link to={ props.path }><div\n            className={ props.classname + ' bg-primary text-light' }\n            style={ style }\n\n        >\n            <h1>{ props.content }</h1>\n        </div >\n        </Link>\n    );\n}\nexport { Box };","import React, { Component } from 'react';\nimport { Box } from \"./Box\";\n\nclass MainMenuPage extends Component {\n\n    state = {\n        // backgroundColor: '#aaaeb1af',\n        minHeight: '99.8vh',\n        width: '98.9vw',\n    }\n\n    render () {\n        return (\n            <div>\n                <div style={ this.state }>\n                    <div className=\"row text-center\">\n                        <h3>Main Menu</h3>\n                    </div>\n\n                    <Box className=\"billing\"\n                        content='Billing'\n                        path=\"/billing\"\n                    />\n\n                    <Box className=\"inventory\"\n                        content='Inventory'\n                        path=\"/inventory\"\n                    />\n\n                    <Box className=\"itemrequest\"\n                        content='Item Request'\n                        path=\"/itemrequest\"\n                    />\n\n                    <Box className=\"salesreport\"\n                        content='Sales Report'\n                        path=\"/salesreport\"\n                    />\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainMenuPage;","import React, { useState, useRef, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport \"./buttonstyle.css\"\n\nimport { Autocomplete, TextField } from '@mui/material'\n\nfunction IIndRow ( props ) {\n\n    const { tableRows, setTableRows } = props;\n    const style = {\n        height: \"auto\",\n        width: \"100%\",\n    }\n    const [ isValid, setIsValid ] = useState( false );\n    const [ itemId, setItemid ] = useState( {\n        iName: '',\n        iPrice: 0,\n        iQuantity: 0,\n    } );\n    const idOptions = () => {\n        const inventoryArray = JSON.parse( localStorage.getItem( \"inventory\" ) );\n        if ( inventoryArray ) {\n            return inventoryArray.map( ( item ) => item.name );\n        } else return false;\n\n    }\n    const options = idOptions();\n\n    const specifiedObject = ( userPressedId ) => {\n        const inventoryArray = JSON.parse( localStorage.getItem( \"inventory\" ) );\n        if ( inventoryArray ) {\n            const newTableRow = inventoryArray.filter( ( item ) => item.name === userPressedId );\n\n            if ( newTableRow.length > 0 ) {\n                return newTableRow[ 0 ];\n            }\n        }\n        return false;\n    }\n\n    const handleIdChange = ( userPressedId ) => {\n\n        const response = specifiedObject( userPressedId );\n\n        if ( response ) {\n            console.log( 'valid id' );\n            setItemid( ( prev ) => {\n                return {\n                    ...prev,\n                    iPrice: response.price,\n                }\n            } );\n        } else {\n            alert( 'invalid id' );\n            setItemid( ( prev ) => {\n                return {\n                    ...prev,\n                    iPrice: 0,\n                }\n            } );\n        }\n\n    }\n    const quantityCheck = ( userQuantity ) => {\n        if ( userQuantity <= 0 ) {\n            return\n        }\n\n        setItemid( ( prev ) => {\n            return {\n                ...prev,\n                iQuantity: userQuantity,\n            }\n        } );\n        const response = specifiedObject( itemId.iName );\n\n        if ( response ) {\n            response.inStock > userQuantity ? setIsValid( true ) : setIsValid( false );\n        }\n        // console.log( 'validStock', isValid )\n    }\n    const changeTableData = () => {\n        if ( itemId.iName === '' || itemId.iQuantity <= 0 ) {\n            alert( 'Please Enter All Fields !' );\n            return\n        }\n\n        if ( isValid ) {\n            const response = specifiedObject( itemId.iName );\n\n            if ( response ) {\n                // console.log( \"inner\" )\n                const { id, name, price } = response;\n                let newProduct = {};\n                const existingItem = tableRows.find( ( item ) => item.name === itemId.iName );\n\n                if ( existingItem ) {\n                    const newTableRows = tableRows.map( ( item ) => {\n\n                        if ( item.name === itemId.iName ) {\n                            return {\n                                ...item,\n                                quantity: ( item.quantity + itemId.iQuantity ),\n                                totalPrice: ( ( item.quantity + itemId.iQuantity ) * item.unitPrice ),\n                            }\n                        } else {\n                            if ( item.id ) {\n                                return item;\n                            }\n                        }\n                    } )\n                    console.log( 'newTableRows:', newTableRows );\n                    setTableRows( newTableRows );\n                }\n                else {\n                    newProduct = {\n                        id: id,\n                        name: name,\n                        quantity: itemId.iQuantity,\n                        unitPrice: price,\n                        totalPrice: parseInt( price ) * parseInt( itemId.iQuantity ),\n                    }\n                    setTableRows( ( prev ) => [ ...prev, { ...newProduct } ] );\n                }\n            }\n            setItemid( {\n                iName: '',\n                iPrice: 0,\n                iQuantity: 0,\n            } );\n        } else {\n            // console.log( \"outer\" )\n            setItemid( {\n                iName: '',\n                iPrice: 0,\n                iQuantity: 0,\n            } );\n            alert( 'out of stock !' );\n        }\n    }\n    let pointer = useRef();\n\n    const handleCalculatorValues = ( ref, value ) => {\n        if ( !ref ) return;\n        // if ( ref === \"id\" ) {\n        //     handleIdChange( itemId.iName ) ;\n        //     setItemid( ( prev ) => {\n        //         return {\n        //             ...prev,\n        //             iId: parseInt( prev.iId + value ),\n        //         };\n        //     } );\n        // }\n        if ( ref === \"quantity\" ) {\n            quantityCheck( parseInt( itemId.iQuantity + value ) )\n        }\n    }\n\n    return (\n        <>\n            <div className=\"row \" style={ style }>\n                <div className=\"col-12 col-md-5 col-sm-12 ps-4 mt-3\">\n                    <div className=\"row text-center \">\n                        <div className=\"col-3 col-md-3\">\n                            <label className=\"form-label text-primary bg-light px-3 rounded\" htmlFor=\"itemname\">Item Name</label>\n                        </div>\n                        <div className=\"col-3 col-md-3\">\n                            <label className=\"form-label text-primary bg-light px-3 rounded\" htmlFor=\"itemprice\">Item Price</label>\n                        </div>\n                        <div className=\"col-3 col-md-3\">\n                            <label className=\"form-label text-primary bg-light px-3 rounded\" htmlFor=\"itemquantity\">\n                                Quantity</label>\n                        </div>\n                    </div>\n                    <div className=\"row text-center\">\n                        <div className=\"col-3 col-md-3\">\n                            {/*  */ }\n                            <div>\n                                <Autocomplete\n                                    value={ itemId.iName ? itemId.iName : options[ 0 ] }\n                                    onChange={ ( e, newValue ) => {\n                                        handleIdChange( newValue );\n                                        setItemid( ( prev ) => {\n                                            return {\n                                                ...prev,\n                                                iName: newValue,\n                                            };\n                                        } )\n                                    } }\n                                    onFocus={ () => pointer.current = 'id' }\n                                    id=\"controllable-states-demo\"\n                                    options={ options ? options : [ 'no values' ] }\n                                    renderInput={ ( params ) => <TextField { ...params }\n                                        id=\"filled-hidden-label-small\"\n                                        variant=\"filled\"\n                                        size=\"small\" /> }\n                                />\n                            </div>\n                            {/*  */ }\n                            {/* <input className=\"form-control\" type=\"number\" value={ itemId.iId } onChange={ ( e ) => {\n                                handleIdChange( parseInt( e.target.value ) );\n                                setItemid( ( prev ) => {\n                                    return {\n                                        ...prev,\n                                        iId: parseInt( e.target.value ) || 0,\n                                    };\n                                } )\n                            } }\n                                onFocus={ () => pointer.current = 'id' } /> */}\n                        </div>\n                        <div className=\"col-3 col-md-3\">\n                            <input className=\"form-control\" type=\"number\" readOnly id=\"itemprice\" value={ itemId.iPrice } />\n                        </div>\n                        <div className=\"col-3 col-md-3\">\n                            <input className=\"form-control\" type=\"number\" min={ \"0\" } id=\"itemquantity\" value={ itemId.iQuantity }\n                                onChange={ ( e ) => {\n                                    quantityCheck( parseInt( e.target.value ) )\n                                } }\n                                onFocus={ () => pointer.current = 'quantity' }\n                            />\n                        </div>\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary\" id=\"addbtn\"\n                                onClick={ changeTableData }>Add</button>\n                        </div>\n                    </div>\n                    <div className=\"row d-flex p-2\">\n                        <div className=\"col ms-5\">\n                            <div className=\"row mb-1\">\n                                <button className='btn btn-primary col-2 mx-1'\n                                    onClick={ () => handleCalculatorValues( pointer.current, '7' ) }>7</button>\n                                <button className='btn btn-primary col-2 mx-1'\n                                    onClick={ () => handleCalculatorValues( pointer.current, '8' ) }>8</button>\n                                <button className='btn btn-primary col-2 mx-1'\n                                    onClick={ () => handleCalculatorValues( pointer.current, '9' ) }>9</button>\n                            </div>\n                            <div className=\"row mb-1\">\n                                <button className='btn btn-primary col-2 mx-1'\n                                    onClick={ () => handleCalculatorValues( pointer.current, '4' ) }>4</button>\n                                <button className='btn btn-primary col-2 mx-1'\n                                    onClick={ () => handleCalculatorValues( pointer.current, '5' ) }>5</button>\n                                <button className='btn btn-primary col-2 mx-1'\n                                    onClick={ () => handleCalculatorValues( pointer.current, '6' ) }>6</button>\n                            </div>\n                            <div className=\"row mb-1\">\n                                <button className='btn btn-primary col-2 mx-1' onClick={ () => handleCalculatorValues( pointer.current, '1' ) }>1</button>\n                                <button className='btn btn-primary col-2 mx-1' onClick={ () => handleCalculatorValues( pointer.current, '2' ) }>2</button>\n                                <button className='btn btn-primary col-2 mx-1' onClick={ () => handleCalculatorValues( pointer.current, '3' ) }>3</button>\n                            </div>\n                            <div className=\"row\">\n                                <button className='btn btn-primary col-2 mx-1' onClick={ () => handleCalculatorValues( pointer.current, '0' ) }>0</button>\n                                <button className='btn btn-primary col-2 mx-1'>.</button>\n                                <button className='btn btn-primary col-2 mx-1'>-</button>\n                            </div>\n                        </div>\n                        <div className='col-6'>\n                            <div className=\"row\">\n                                <button className=\"btn btn-primary m-1 py-4 px-2 text-center col-6\" onClick={ () => {\n                                    setItemid( {\n                                        iName: '',\n                                        iPrice: 0,\n                                        iQuantity: 0,\n                                    } )\n                                } }>AC</button>\n                            </div>\n                            <div className=\"row\">\n                                <button className=\"btn btn-primary m-1 py-4 px-2 text-center col-6\" onClick={ () => {\n\n                                    if ( pointer && pointer.current === 'id' ) {\n                                        let id = String( itemId.iId );\n                                        if ( id.length > 1 ) {\n                                            id = id.slice( 0, -1 )\n\n                                            setItemid( ( prev ) => {\n                                                return {\n                                                    ...prev,\n                                                    iId: parseInt( id ),\n                                                }\n                                            } )\n                                        } else {\n                                            setItemid( ( prev ) => {\n                                                return {\n                                                    ...prev,\n                                                    iId: 0,\n                                                }\n                                            } )\n                                        }\n\n                                    }\n                                    if ( pointer && pointer.current === 'quantity' ) {\n                                        let quantity = String( itemId.iQuantity );\n\n                                        if ( quantity.length > 1 ) {\n                                            quantity = quantity.slice( 0, -1 );\n                                            setItemid( ( prev ) => {\n                                                return {\n                                                    ...prev,\n                                                    iQuantity: parseInt( quantity ),\n                                                }\n                                            } )\n                                        } else {\n\n                                            setItemid( ( prev ) => {\n                                                return {\n                                                    ...prev,\n                                                    iQuantity: 0,\n                                                }\n                                            } )\n                                        }\n                                    }\n                                } }>Clear</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-12 col-md-7 col-sm-12 mt-5 p-0\">\n                    <div className=\"col-12 col-sm-12 d-flex mt-3\">\n                        <div className=\"d-flex flex-column\">\n                            <Button\n                                className=\"newbill py-3\"\n                                name=\"New Bill\"\n                                height=\"3\"\n                                bg=\"bg-warning\"\n                            />\n                            <Button\n                                className=\"priceamendment px-1 py-0\"\n                                name=\"Price Amendment\"\n                                height=\"3\"\n                                bg=\"bg-warning\"\n                            />\n                        </div>\n                        <Button\n                            className=\"$2 py-5\"\n                            name=\"$2\"\n                            height=\"6\"\n                            bg=\"bg-warning\"\n                            onClick={ () => props.setBillingValues( ( prev ) => {\n                                return {\n                                    ...prev,\n                                    tender: prev.tender + 2,\n                                }\n                            } ) }\n\n                        />\n                        <Button\n                            className=\"$10 py-5\"\n                            name=\"$10\"\n                            height=\"6\"\n                            bg=\"bg-warning\"\n                            onClick={ () => props.setBillingValues( ( prev ) => {\n                                return {\n                                    ...prev,\n                                    tender: prev.tender + 10,\n                                }\n                            } ) }\n                        />\n                        <div>\n                            <Button\n                                className=\"opencashbox py-0 px-1 \"\n                                name=\"Open Cash Box\"\n                                height=\"3\"\n                                bg=\"bg-success\"\n                            />\n\n                            <Button\n                                className=\"terminatetransaction py-0 px-1\"\n                                name=\"Terminate Transaction\"\n                                height=\"3\"\n                                bg=\"bg-success\"\n                            />\n                        </div>\n                        <div>\n                            <Button\n                                className=\"goodsreturn py-0\"\n                                name=\"Goods Return\"\n                                height=\"3\"\n                                bg=\"bg-success\"\n                            />\n                            <Button\n                                className=\"print py-3 \"\n                                name=\"Print\"\n                                height=\"3\"\n                                bg=\"bg-success\"\n                                onClick={ () => {\n                                    if ( tableRows.length > 0 ) {\n                                        const printContents = document.getElementById( \"tablepage\" ).innerHTML;\n                                        const originalContents = document.body.innerHTML;\n                                        document.body.innerHTML = printContents;\n                                        window.print();\n                                        document.body.innerHTML = originalContents;\n                                    } else {\n                                        alert( 'add items for billing !' );\n                                    }\n                                } }\n                            />\n                        </div>\n                        <div>\n                            <Button\n                                className=\"cancelitem py-4\"\n                                name=\"Cancel Item\"\n                                height=\"6\"\n                                bg=\"bg-success\"\n                            />\n                        </div>\n                        <Button\n                            className=\"additem\"\n                            name=\"Add Item\"\n                            height=\"6\"\n                            bg=\"bg-success\"\n                        />\n\n\n                    </div>\n                    <div className=\"col-12 col-md-6 col-sm-12 d-flex\" id='billrow'>\n                        <Button\n                            className=\"bill\"\n                            name='Bill'\n                            height=\"6\"\n                            bg=\"bg-warning\"\n                            onClick={ props.setPayablePage }\n                        />\n                        <Button\n                            className=\"$5\"\n                            name=\"$5\"\n                            height=\"6\"\n                            bg=\"bg-warning\"\n                            onClick={ () => props.setBillingValues( ( prev ) => {\n                                return {\n                                    ...prev,\n                                    tender: prev.tender + 5,\n                                }\n                            } ) }\n                        />\n                        <Button\n                            className=\"$50\"\n                            name=\"$50\"\n                            height=\"6\"\n                            bg=\"bg-warning\"\n                            onClick={ () => props.setBillingValues( ( prev ) => {\n                                return {\n                                    ...prev,\n                                    tender: prev.tender + 50,\n                                }\n                            } ) }\n                        />\n                        <Button\n                            className=\"giftvoucher\"\n                            name=\"Gift Voucher\"\n                            height=\"6\"\n                            bg=\"bg-warning\"\n                        />\n                        <div >\n                            <Button\n                                className=\"reservedtransaction py-0\"\n                                name=\"Reserved Transaction\"\n                                height=\"3\"\n                                bg=\"bg-success\"\n                            />\n                            <Button\n                                className=\"restore py-0 px-4\"\n                                name=\"Restore\"\n                                height=\"3\"\n                                bg=\"bg-success\"\n                            />\n                        </div>\n                        <Button\n                            className=\"deletealltransaction px-1\"\n                            name=\"Delete All Transaction\"\n                            height=\"6\"\n                            bg=\"bg-success\"\n                        /><Button\n                            className=\"mainmenu\"\n                            name=\"Main Menu\"\n                            height=\"6\"\n                            bg=\"bg-success\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport { IIndRow };\n\n\nexport default function Button ( props ) {\n    const navigate = useNavigate();\n    const style = {\n        width: \"7em\",\n        height: `${props.height}em`,\n    }\n    let onClick = props.onClick ? props.onClick : () => {\n        alert( \"this feature will enabling soon!\" );\n    }\n    if ( props.className === 'mainmenu' ) {\n        onClick = () => navigate( \"/\" );\n    }\n    return (\n        <div>\n            <button\n                onClick={ onClick }\n                className={ `btn btn-primary p-4 ${props.bg} text-light ${props.className}` }\n                style={ style }>\n                { props.className === \"bill\" && <i className=\" fa-solid fa-play\"></i> }\n                { props.name }\n            </button>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport \"./hover.css\"\n\nfunction UpperTablePage ( { tableRows, setTableRows, wholeTotalPrice, setWholeTotalPrice, setBillingValues } ) {\n\n    const style = {\n        height: \"80vh\",\n        overflow: \"auto\",\n        display: \"flex\",\n        justifyContent: \"center\",\n    }\n    const tdWidth = {\n        width: \"10em\",\n    }\n    useEffect( () => {\n        let totalPrice = 0;\n        for ( const i in tableRows ) {\n            totalPrice += tableRows[ i ].totalPrice;\n        }\n        setWholeTotalPrice( totalPrice );\n    } )\n\n    return (\n        <div className=\"col-sm-12 col-md-5 overflow-auto\" id=\"tablepage\" style={ style }>\n            <div className=\"my-1\">\n                <input className=\"form-control\" value={ `Total Price Is : $ ${wholeTotalPrice}` } readOnly id=\"wholetotalprice\" type=\"text\" />\n\n                <table className=\"table table-borderless\">\n                    <thead>\n                        <tr>\n                            <th style={ tdWidth }>Item</th>\n                            <th>Quantity</th>\n                            <th>Unit Price</th>\n                            <th>Total Price</th>\n                            <th>Remove</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"tbody\">\n                        {\n                            tableRows && tableRows.map( ( item, index ) => {\n                                return <Tl\n                                    key={ index }\n                                    item={ item }\n                                    tableRows={ tableRows }\n                                    setTableRows={ setTableRows }\n                                    setBillingValues={ setBillingValues } />\n                            } )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport { UpperTablePage };\n\n\nfunction Tl ( props ) {\n\n    const { id, name, quantity, unitPrice, totalPrice } = props.item;\n\n    const removeItem = ( clickedItemId ) => {\n        if ( window.confirm( 'Are ou sure you want to delete!' ) ) {\n\n            const { tableRows, setTableRows } = props;\n            localStorage.removeItem( id );\n            setTableRows( tableRows.filter( ( item ) => item.id !== clickedItemId ) )\n            console.log( \"removed id: \", id, \"successfully\" );\n        }\n    }\n    return (\n        <tr>\n            <td>{ name }</td>\n            <td>{ quantity }</td>\n            <td className=\"text-center\">$ { unitPrice }</td>\n            <td className=\"text-center\">$ { totalPrice }</td>\n            <td\n                id={ id }\n                className=\"text-center\"\n                onClick={ () => removeItem( id ) }\n            >\n                <i className=\"fa-solid fa-xmark\" id={ id }></i>\n            </td>\n\n        </tr>\n    );\n}\nexport { Tl };","export default [\n    {\n        \"id\": 1,\n        \"item\": \"veg\",\n        \"name\": \"veg1\",\n        \"quantity\": 0,\n        \"unitPrice\": 30,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 2,\n        \"item\": \"veg\",\n        \"name\": \"veg2\",\n        \"quantity\": 0,\n        \"unitPrice\": 32,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 3,\n        \"item\": \"veg\",\n        \"name\": \"veg3\",\n        \"quantity\": 0,\n        \"unitPrice\": 34,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 4,\n        \"item\": \"veg\",\n        \"name\": \"veg4\",\n        \"quantity\": 0,\n        \"unitPrice\": 32,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 5,\n        \"item\": \"non-veg\",\n        \"name\": \"nonveg1\",\n        \"quantity\": 0,\n        \"unitPrice\": 100,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 6,\n        \"item\": \"non-veg\",\n        \"name\": \"nonveg2\",\n        \"quantity\": 0,\n        \"unitPrice\": 110,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 7,\n        \"item\": \"non-veg\",\n        \"name\": \"nonveg3\",\n        \"quantity\": 0,\n        \"unitPrice\": 120,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 8,\n        \"item\": \"non-veg\",\n        \"name\": \"nonveg4\",\n        \"quantity\": 0,\n        \"unitPrice\": 100,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 9,\n        \"item\": \"cool-drinks\",\n        \"name\": \"cooldrink1\",\n        \"quantity\": 0,\n        \"unitPrice\": 10,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 10,\n        \"item\": \"cool-drinks\",\n        \"name\": \"cooldrink2\",\n        \"quantity\": 0,\n        \"unitPrice\": 15,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 11,\n        \"item\": \"cool-drinks\",\n        \"name\": \"cooldrink3\",\n        \"quantity\": 0,\n        \"unitPrice\": 20,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 12,\n        \"item\": \"cool-drinks\",\n        \"name\": \"cooldrink4\",\n        \"quantity\": 0,\n        \"unitPrice\": 25,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 13,\n        \"item\": \"snacks\",\n        \"name\": \"snack1\",\n        \"quantity\": 0,\n        \"unitPrice\": 20,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 14,\n        \"item\": \"snacks\",\n        \"name\": \"snack2\",\n        \"quantity\": 0,\n        \"unitPrice\": 22,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 15,\n        \"item\": \"snacks\",\n        \"name\": \"snack3\",\n        \"quantity\": 0,\n        \"unitPrice\": 24,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 16,\n        \"item\": \"snacks\",\n        \"name\": \"snack4\",\n        \"quantity\": 0,\n        \"unitPrice\": 26,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 17,\n        \"item\": \"tea\",\n        \"name\": \"tea1\",\n        \"quantity\": 0,\n        \"unitPrice\": 10,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 18,\n        \"item\": \"tea\",\n        \"name\": \"tea2\",\n        \"quantity\": 0,\n        \"unitPrice\": 12,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 19,\n        \"item\": \"tea\",\n        \"name\": \"tea3\",\n        \"quantity\": 0,\n        \"unitPrice\": 14,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 20,\n        \"item\": \"tea\",\n        \"name\": \"tea4\",\n        \"quantity\": 0,\n        \"unitPrice\": 16,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 21,\n        \"item\": \"noodles\",\n        \"name\": \"noodle1\",\n        \"quantity\": 0,\n        \"unitPrice\": 50,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 22,\n        \"item\": \"noodles\",\n        \"name\": \"noodle2\",\n        \"quantity\": 0,\n        \"unitPrice\": 55,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 23,\n        \"item\": \"noodles\",\n        \"name\": \"noodle3\",\n        \"quantity\": 0,\n        \"unitPrice\": 60,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 24,\n        \"item\": \"noodles\",\n        \"name\": \"noodle4\",\n        \"quantity\": 0,\n        \"unitPrice\": 65,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 25,\n        \"item\": \"dumplings\",\n        \"name\": \"dumpling1\",\n        \"quantity\": 0,\n        \"unitPrice\": 120,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 26,\n        \"item\": \"dumplings\",\n        \"name\": \"dumpling2\",\n        \"quantity\": 0,\n        \"unitPrice\": 130,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 27,\n        \"item\": \"dumplings\",\n        \"name\": \"dumpling3\",\n        \"quantity\": 0,\n        \"unitPrice\": 140,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 28,\n        \"item\": \"dumplings\",\n        \"name\": \"dumpling4\",\n        \"quantity\": 0,\n        \"unitPrice\": 110,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 29,\n        \"item\": \"ice-creams\",\n        \"name\": \"icecream1\",\n        \"quantity\": 0,\n        \"unitPrice\": 20,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 30,\n        \"item\": \"ice-creams\",\n        \"name\": \"icecream2\",\n        \"quantity\": 0,\n        \"unitPrice\": 25,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 31,\n        \"item\": \"ice-creams\",\n        \"name\": \"icecream3\",\n        \"quantity\": 0,\n        \"unitPrice\": 35,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 32,\n        \"item\": \"ice-creams\",\n        \"name\": \"icecream4\",\n        \"quantity\": 0,\n        \"unitPrice\": 30,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 33,\n        \"item\": \"fruits\",\n        \"name\": \"fruit1\",\n        \"quantity\": 0,\n        \"unitPrice\": 50,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 34,\n        \"item\": \"fruits\",\n        \"name\": \"fruit2\",\n        \"quantity\": 0,\n        \"unitPrice\": 60,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 35,\n        \"item\": \"fruits\",\n        \"name\": \"fruit3\",\n        \"quantity\": 0,\n        \"unitPrice\": 55,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 36,\n        \"item\": \"fruits\",\n        \"name\": \"fruit4\",\n        \"quantity\": 0,\n        \"unitPrice\": 65,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 37,\n        \"item\": \"starchy\",\n        \"name\": \"starchy1\",\n        \"quantity\": 0,\n        \"unitPrice\": 100,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 38,\n        \"item\": \"starchy\",\n        \"name\": \"starchy2\",\n        \"quantity\": 0,\n        \"unitPrice\": 130,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 39,\n        \"item\": \"starchy\",\n        \"name\": \"starchy3\",\n        \"quantity\": 0,\n        \"unitPrice\": 120,\n        \"totalPrice\": 0\n    },\n    {\n        \"id\": 40,\n        \"item\": \"starchy\",\n        \"name\": \"starchy4\",\n        \"quantity\": 0,\n        \"unitPrice\": 150,\n        \"totalPrice\": 0\n    },\n];","import React from 'react'\nimport data from '../data';\n\nfunction Li ( props ) {\n\n    const setItems = props.onclick;\n    const name = props.name;\n\n    const handleItems = () => {\n        let newItems = [];\n        if ( name ) {\n            newItems = data.filter( ( products ) => {\n                return products.item === name;\n            } );\n\n            setItems( newItems );\n        } else {\n            setItems( data );\n        }\n    }\n    return (\n\n        <li className={ props.liclassname }>\n            <button\n                className={ props.aclassname }\n                aria-current={ props.aria }\n                onClick={ handleItems }\n                id={ props.id }>\n                { props.content }\n            </button>\n        </li>\n\n    )\n}\n\nexport default Li","import React from 'react'\nimport \"./liWidth.css\";\nimport Li from './Li';\nfunction NavigationMenu ( { setItems } ) {\n    const style = {\n        height: \"80vh\",\n    }\n    const cursor = {\n        cursor: \"pointer\",\n    }\n    const background = {\n        backgroundColor: \"#87888aaf\",\n    }\n    return (\n        <div className=\"col-12 col-sm-12 col-md-2 carousel slide my-1\" id=\"nav-items\" style={ style }>\n            <ul className=\"nav flex-column nav-pills carousel-inner\" style={ cursor }>\n\n                <li className=\"nav-item my-1 arrow\" style={ background }>\n                    <button className=\"nav-link d-flex justify-content-center\" aria-current=\"page\" data-bs-target=\"#nav-items\"\n                        data-bs-slide=\"prev\" data-bs-interval=\"false\" type=\"button\"><i\n                            className=\"fa-solid fa-up-long text-black\"></i></button>\n                </li>\n                <Li\n                    liclassname='nav-item '\n                    aclassname=\"all-btn nav-link text-light bg-primary carousel-item menu active\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"all-btn\"\n                    content=\"All Items\"\n                />\n\n                <Li\n                    liclassname='nav-item my-1 '\n                    aclassname=\"vegetarion nav-link text-light bg-primary menu\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"veg-btn\"\n                    content=\"Vegetarion\"\n                    name=\"veg\"\n                />\n\n                <Li\n                    liclassname='nav-item my-1 '\n                    aclassname=\"nonvegetarion nav-link text-light bg-primary menu\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"nonveg-btn\"\n                    content=\"Non Vegetarion\"\n                    name=\"non-veg\"\n                />\n\n                <Li\n                    liclassname='nav-item my-1 '\n                    aclassname=\"cooldrinks nav-link text-light bg-primary menu\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"cooldrinks-btn\"\n                    content=\"Cool Drinks\"\n                    name=\"cool-drinks\"\n                />\n\n                <Li\n                    liclassname='nav-item my-1 '\n                    aclassname=\"snacks nav-link text-light bg-primary menu\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"snacks-btn\"\n                    content=\"Snacks\"\n                    name=\"snacks\"\n                />\n\n                <Li\n                    liclassname='nav-item my-1 '\n                    aclassname=\"tea nav-link text-light bg-primary menu\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"tea-btn\"\n                    content=\"Tea\"\n                    name=\"tea\"\n                />\n\n                <Li\n                    liclassname='nav-item my-1 '\n                    aclassname=\"noodles nav-link text-light bg-primary menu\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"noodles-btn\"\n                    content=\"Noodles\"\n                    name=\"noodles\"\n                />\n\n                <Li\n                    liclassname='nav-item my-1 '\n                    aclassname=\"dumblings nav-link text-light bg-primary menu\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"dumplings-btn\"\n                    content=\"Dumplings\"\n                    name=\"dumplings\"\n                />\n\n                <Li\n                    liclassname='nav-item my-1 '\n                    aclassname=\"icecream nav-link text-light bg-primary menu\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"icecream-btn\"\n                    content=\"Ice Creams\"\n                    name=\"ice-creams\"\n                />\n\n                <Li\n                    liclassname='nav-item '\n                    aclassname=\"fruit nav-link text-light bg-primary carousel-item menu\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"fruit-btn\"\n                    content=\"Fruit and vegetables\"\n                    name=\"fruits\"\n                />\n\n                <Li\n                    liclassname='nav-item '\n                    aclassname=\"starchy nav-link text-light bg-primary carousel-item menu\"\n                    aria=\"page\"\n                    onclick={ setItems }\n                    id=\"starchy-btn\"\n                    content=\"Starchy food\"\n                    name=\"starchy\"\n                />\n                <li className=\"nav-item my-1 arrow\" style={ background }>\n                    <button className=\"nav-link d-flex justify-content-center\" aria-current=\"page\" data-bs-target=\"#nav-items\"\n                        data-bs-slide=\"next\" data-bs-interval=\"false\" type=\"button\"><i\n                            className=\"fa-solid fa-down-long text-black\"></i></button>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport { NavigationMenu };","import React, { useState } from 'react'\n\nfunction ImgTag ( props ) {\n\n    const [ product ] = useState( props.item )\n    const { id, name } = product;\n    const { tableRows, setTableRows } = props;\n\n    const style = {\n        height: '20vh',\n        cursor: \"pointer\",\n    };\n\n\n    // const updaterFunction = () => {\n    //     let newTableRow = [];\n    //     for ( const key in localStorage ) {\n\n    //         if ( localStorage.hasOwnProperty( key ) ) {\n\n    //             let object = JSON.parse( localStorage.getItem( key ) );\n    //             newTableRow.unshift( object );\n    //             totalPrice += object.totalPrice;\n\n    //         }\n    //     }\n    //     setTableRows( () => newTableRow );\n    //     setWholeTotalPrice( totalPrice );\n    // }\n\n    const handleClick = ( clickedItemId ) => {\n        let newProduct = {};\n        const existingItem = tableRows.find( ( item ) => item.id === clickedItemId );\n        if ( existingItem ) {\n\n            const newTableRows = tableRows.map( ( item ) => {\n                if ( item.id === clickedItemId ) {\n                    return {\n                        ...item,\n                        quantity: ( item.quantity + 1 ),\n                        totalPrice: ( ( item.quantity + 1 ) * item.unitPrice ),\n                    }\n                } else {\n                    if ( item.id ) {\n                        return item;\n                    }\n                }\n            } )\n            console.log( 'newTableRows:', newTableRows );\n\n            setTableRows( newTableRows );\n\n        }\n        else {\n            newProduct = {\n                ...product,\n                \"quantity\": ( product.quantity + 1 ),\n                \"totalPrice\": ( ( product.quantity + 1 ) * product.unitPrice ),\n            }\n            setTableRows( ( prev ) => [ ...prev, { ...newProduct } ] );\n        }\n    }\n    return (\n        <>\n            <img\n                loading=\"lazy\"\n                style={ style }\n                className={ props.classname }\n                id={ id }\n                src={ `../../images/${name}.jfif` }\n                alt={ name }\n                onClick={ () => handleClick( id ) }\n            />\n        </>\n    )\n}\n\nexport default ImgTag;\n// {\n    // import React, { useState, useEffect } from 'react'\n\n    // function ImgTag ( props ) {\n\n    //     const [ product, setProduct ] = useState( props.item )\n    //     const { id, name } = product;\n    //     const setWholeTotalPrice = props.setWholeTotalPrice;\n\n    //     const style = {\n    //         height: '20vh',\n    //         cursor: \"pointer\",\n    //     };\n\n    //     const setTableRows = props.setTableRows;\n    //     let totalPrice = 0;\n\n    //     const updaterFunction = () => {\n    //         let newTableRow = [];\n    //         for ( const key in localStorage ) {\n\n    //             if ( localStorage.hasOwnProperty( key ) ) {\n\n    //                 let object = JSON.parse( localStorage.getItem( key ) );\n    //                 newTableRow.unshift( object );\n    //                 totalPrice += object.totalPrice;\n\n    //             }\n    //         }\n    //         setTableRows( () => newTableRow );\n    //         setWholeTotalPrice( totalPrice );\n    //     }\n\n    //     const handleClick = () => {\n\n    //         if ( localStorage.hasOwnProperty( id ) ) {\n    //             let existingProduct = JSON.parse( localStorage.getItem( id ) );\n\n    //             const newProduct = {\n    //                 ...existingProduct,\n    //                 quantity: ( existingProduct.quantity + 1 ),\n    //                 totalPrice: ( ( existingProduct.quantity + 1 ) * existingProduct.unitPrice ),\n    //             };\n    //             localStorage.setItem( `${id}`, JSON.stringify( newProduct ) );\n\n    //         } else {\n    //             const newProduct = {\n    //                 ...product,\n    //                 \"quantity\": ( product.quantity + 1 ),\n    //                 \"totalPrice\": ( ( product.quantity + 1 ) * product.unitPrice ),\n    //             };\n    //             localStorage.setItem( `${id}`, JSON.stringify( newProduct ) );\n\n    //         }\n    //         updaterFunction();\n    //     }\n    //     useEffect( () => {\n\n    //         updaterFunction();\n    //     }, [] );\n\n    //     return (\n    //         <>\n    //             <img\n    //                 loading=\"lazy\"\n    //                 style={ style }\n    //                 className={ props.classname }\n    //                 id={ id }\n    //                 src={ `../../images/${name}.jfif` }\n    //                 alt={ name }\n    //                 onClick={ handleClick }\n    //             />\n    //         </>\n    //     )\n    // }\n\n    // export default ImgTag;\n// }","import React from 'react'\nimport ImgTag from \"./ImgTag\";\n\n\nfunction GalleryPage ( props ) {\n\n    const overflow = {\n        height: \"80vh\",\n        overflow: 'auto',\n    }\n    const items = props.items;\n\n    return (\n\n        <div className=\"col-sm-12 col-md-5 mt-2  flex-row\" id=\"list-items\" style={ overflow }>\n\n            {\n                items.map( ( product ) => {\n                    return <div\n                        key={ product.id }\n                        className=\"my-1 d-inline\">\n\n                        <ImgTag\n                            classname='col-3 img-thumbnail rounded'\n                            item={ product }\n                            tableRows={ props.tableRows }\n                            setTableRows={ props.setTableRows }\n                            setWholeTotalPrice={ props.setWholeTotalPrice }\n                        />\n\n                    </div>\n\n                } )\n\n            }\n\n        </div>\n    )\n}\n\nexport { GalleryPage };","import React, { useContext, useEffect } from 'react'\nimport { InventoryContext } from \"../../App\";\n\nfunction Payable ( props ) {\n\n    useEffect( () => {\n        const newTableOfItem = JSON.parse( localStorage.getItem( \"inventory\" ) );\n        if ( newTableOfItem && newTableOfItem.length > 0 ) {\n            setTableOfItems( newTableOfItem );\n        }\n    }, [] );\n\n    const { tableOfItems, setTableOfItems } = useContext( InventoryContext );\n    const style = {\n        height: \"80vh\",\n        overflow: \"auto\",\n    }\n\n    const handlePay = () => {\n        if ( change < 1 ) {\n            alert( \"please enter correct tender amount !\" );\n            return;\n        }\n        const { setPayablePage, setBillingValues, setTableRows, setWholeTotalPrice, tableRows } = props;\n        setBillingValues( {\n            amount: 0,\n            gstAmount: 0,\n            payable: 0,\n            tender: 0,\n            change: 0,\n        } );\n        const storeSalesReport = () => {\n            const newSalesReportArray = tableRows.map( ( item ) => {\n                let type = item.id >= 41 ? 'inventory-item' : 'image-item';\n                return {\n                    id: item.id,\n                    name: item.name,\n                    soldQuantity: item.quantity,\n                    totalPrice: item.totalPrice,\n                    date: new Date(),\n                    type: type,\n                };\n            } );\n\n            let oldSalesReportArray = JSON.parse( localStorage.getItem( 'salesReport' ) );\n            if ( oldSalesReportArray && oldSalesReportArray.length > 0 ) {\n\n                localStorage.setItem( 'salesReport', JSON.stringify( [\n                    ...oldSalesReportArray, ...newSalesReportArray,\n                ]\n                ) );\n            } else {\n                localStorage.setItem( 'salesReport', JSON.stringify( [\n                    ...newSalesReportArray,\n                ]\n                ) );\n            }\n        };\n\n        if ( tableOfItems.length > 0 ) {\n\n            tableRows.map( ( tableItem ) => {\n                tableOfItems.map( ( inventoryItems ) => {\n\n                    if ( tableItem.id === inventoryItems.id ) {\n                        console.log( \"id matched\", tableItem.id, ' ', inventoryItems.id )\n                        let sold, stock = 0;\n                        sold = tableItem.quantity + inventoryItems.sold;\n                        stock = inventoryItems.purchaseQuantity - sold;\n                        const newInventoryItem = {\n                            ...inventoryItems,\n                            sold: sold,\n                            inStock: stock,\n                        };\n\n                        let localStorageInventoryArray = JSON.parse( localStorage.getItem( \"inventory\" ) );\n\n                        const newTableOfItem = localStorageInventoryArray.filter( ( item ) => item.id !== inventoryItems.id );\n                        console.log( 'newInventoryItem ', newInventoryItem );\n                        console.log( 'newTableOfItem ', newTableOfItem );\n\n\n                        localStorage.setItem(\n                            \"inventory\",\n                            JSON.stringify( [\n                                ...newTableOfItem,\n                                {\n                                    ...newInventoryItem,\n                                },\n                            ] )\n                        );\n\n                        setTableOfItems( [\n                            ...newTableOfItem,\n                            {\n                                ...newInventoryItem,\n                            },\n                        ] );\n                    } else {\n                        console.log( \"id didnt matched\" )\n                    }\n                } );\n            } );\n            storeSalesReport();\n        }\n        setPayablePage( ( prev ) => {\n            return !prev;\n        } );\n        setTableRows( [] );\n        setWholeTotalPrice( 0 );\n        alert( \"Successfully Paid!\" );\n\n    }\n    let { amount, gstAmount, payable, tender, change } = props.billingValues;\n\n    gstAmount = parseFloat( amount * 0.18 ).toFixed( 2 );\n    payable = ( parseFloat( amount ) + parseFloat( gstAmount ) ).toFixed( 2 );\n    change = ( parseFloat( tender ) - parseFloat( payable ) ).toFixed( 2 );\n    return (\n        <div className=\"col-sm-12 col-md-5\"\n            style={ style }>\n            <div className=\"my-1\">\n                <input\n                    className=\"form-control\"\n                    value={ `Change : $ ${change}` }\n                    readOnly\n                    type=\"text\"\n                />\n\n                <div className=\"row my-1\">\n                    <span className=\"col-8 text-center\">Amount</span>\n                    <span className=\"col-4\">\n                        <input\n                            readOnly\n                            className=\"form-control\"\n                            type=\"text\"\n                            value={ `$ ${amount}` }\n                        />\n                    </span>\n                </div>\n                <div className=\"row my-1 \">\n                    <span className=\"col-8 text-center\">GST Amount </span>\n                    <span className=\"col-4\">\n                        <input\n                            className=\" form-control \"\n                            type=\"text\"\n                            readOnly\n                            value={ `$ ${gstAmount}` }\n                        />\n                    </span>\n                </div>\n                <hr />\n                <div className=\"row my-1\">\n                    <span className=\"col-8 text-danger text-center\">Payable</span>\n                    <span className=\"col-4\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            readOnly\n                            value={ `$ ${payable}` }\n                        />\n                    </span>\n                </div>\n                <hr />\n                <div className=\"row my-1\">\n                    <span className=\"col-8 text-primary text-center\">Tender</span>\n                    <span className=\"col-4\">\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            readOnly\n                            value={ `$ ${tender}` } />\n                    </span>\n                </div>\n                <div className=\"row my-1\">\n                    <span className=\"col-8 text-primary text-center\">Change</span>\n                    <span className=\"col-4\">\n                        <input\n                            className=\"form-control\"\n                            readOnly\n                            type=\"text\"\n                            value={ `$ ${change}` }\n                        />\n                    </span>\n                </div>\n                <div className=\"row py-3 justify-content-center\">\n                    <button className=\"col-3 btn btn-outline-success text-center\"\n                        onClick={ () => handlePay()\n                        }>\n                        PAY\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport { Payable };","import React, { useState, useEffect } from 'react'\nimport { UpperTablePage } from \"./UpperTablePage\";\nimport { NavigationMenu } from \"./NavigationMenu\";\nimport { GalleryPage } from './GalleryPage';\nimport { Payable } from './Payable';\nimport data from \"../data\";\n\n\nfunction Istrow ( props ) {\n\n    const [ items, setItems ] = useState( data );\n    const { tableRows, setTableRows } = props;\n    const { wholeTotalPrice, setWholeTotalPrice } = props;\n    const style = {\n        height: \"maxContent\",\n    }\n    useEffect( () => {\n        // console.log( 'tableRows:', tableRows )\n    }, [ tableRows ] );\n    return (\n        <div>\n            <div className='row ' style={ style }>\n                {\n                    props.payablePage ?\n                        <Payable\n                            billingValues={ props.billingValues }\n                            setBillingValues={ props.setBillingValues }\n                            setPayablePage={ props.setPayablePage }\n                            setTableRows={ setTableRows }\n                            setWholeTotalPrice={ setWholeTotalPrice }\n                            tableRows={ tableRows }\n                        />\n                        : <UpperTablePage\n                            tableRows={ tableRows }\n                            setTableRows={ setTableRows }\n                            wholeTotalPrice={ wholeTotalPrice }\n                            setWholeTotalPrice={ setWholeTotalPrice }\n                            setBillingValues={ props.setBillingValues }\n                        />\n                }\n                <NavigationMenu\n                    setItems={ setItems }\n                />\n                <GalleryPage\n                    items={ items }\n                    tableRows={ tableRows }\n                    setTableRows={ setTableRows }\n                    setWholeTotalPrice={ setWholeTotalPrice }\n                />\n            </div>\n        </div>\n    )\n}\nexport { Istrow };","import React, { useState } from \"react\";\nimport { IIndRow } from \"./IIndRow\";\nimport { Istrow } from \"./Istrow\";\n\nfunction Billing() {\n  const [tableRows, setTableRows] = useState([]);\n  const [payablePage, setPayablePage] = useState(false);\n  const [billingValues, setBillingValues] = useState({\n    amount: 0,\n    gstAmount: 0,\n    payable: 0,\n    tender: 0,\n    change: 0,\n  });\n  const [wholeTotalPrice, setWholeTotalPrice] = useState(0);\n\n  const handlePayablePage = () => {\n    setPayablePage((prevPage) => {\n      return !prevPage;\n    });\n    setBillingValues((prev) => {\n      return {\n        ...prev,\n        amount: wholeTotalPrice,\n      };\n    });\n  };\n\n  const style = {\n    maxWidth: \"97.8vw\",\n  };\n\n  return (\n    <div className=\"billing\" style={style}>\n      <Istrow\n        payablePage={payablePage}\n        billingValues={billingValues}\n        setBillingValues={setBillingValues}\n        wholeTotalPrice={wholeTotalPrice}\n        setWholeTotalPrice={setWholeTotalPrice}\n        setPayablePage={setPayablePage}\n        tableRows={tableRows}\n        setTableRows={setTableRows}\n      />\n      <IIndRow\n        setPayablePage={handlePayablePage}\n        setBillingValues={setBillingValues}\n        tableRows={tableRows}\n        setTableRows={setTableRows}\n      />\n    </div>\n  );\n}\n\nexport default Billing;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { InventoryContext } from \"../../App\";\n\nlet initialId = 41;\n\nfunction Inventory() {\n  const [showDateFilter, setShowDateFilter] = useState(false);\n  const [filterType, setFilterType] = useState(\"select\");\n  const [customDateValue, setCustomDateValues] = useState({\n    from: \"\",\n    to: \"\",\n  });\n  const [newItem, setNewItem] = useState({\n    name: \"\",\n    id: initialId,\n    price: 0,\n    purchaseQuantity: 0,\n    sold: 0,\n    inStock: 0,\n    date: \"\",\n  });\n  const navigate = useNavigate();\n  let { tableOfItems, setTableOfItems, setClickedId } = useContext(\n    InventoryContext\n  );\n\n  const validTableOfItemArray = () => {\n    const newTableOfItem = JSON.parse(localStorage.getItem(\"inventory\"));\n    if (newTableOfItem) {\n      tableOfItems = [...newTableOfItem];\n    }\n  };\n  const resetValues = () => {\n    setNewItem({\n      name: \"\",\n      price: 0,\n      purchaseQuantity: 0,\n      sold: 0,\n      inStock: 0,\n    });\n  };\n\n  const handleTableOfItems = () => {\n    const { name, purchaseQuantity, price } = newItem;\n    if (\n      name === \"\" ||\n      purchaseQuantity === \"\" ||\n      purchaseQuantity <= 0 ||\n      price === \"\" ||\n      price <= 0\n    ) {\n      alert(\"Please Enter All Fields Correctly !\");\n      return;\n    }\n    validTableOfItemArray();\n    let existingitem = tableOfItems.find((item) => item.name === newItem.name);\n    // console.log(\"existingitem\", existingitem);\n\n    if (existingitem) {\n      alert(`${newItem.name} was already existed`);\n      return;\n    }\n    const newTableOfItem = {\n      ...newItem,\n      id: initialId++,\n      date: new Date(),\n      inStock: newItem.purchaseQuantity,\n    };\n    // console.log(\"newTableOfItem\", newTableOfItem);\n    localStorage.setItem(\n      \"inventory\",\n      JSON.stringify([\n        ...tableOfItems,\n        {\n          ...newTableOfItem,\n        },\n      ])\n    );\n    setTableOfItems((prev) => [\n      ...prev,\n      {\n        ...newTableOfItem,\n      },\n    ]);\n\n    resetValues();\n    setFilterType(\"select\");\n  };\n\n  useEffect(() => {\n    const newTableOfItem = JSON.parse(localStorage.getItem(\"inventory\"));\n    if (newTableOfItem && newTableOfItem.length > 0) {\n      initialId = newTableOfItem[newTableOfItem.length - 1].id + 1;\n      setTableOfItems(newTableOfItem);\n      console.log(\"loaded\");\n    }\n  }, []);\n\n  const heightStyle = {\n    minHeight: \"100%\",\n  };\n\n  const deleteItem = (itemId) => {\n    if (window.confirm(\"Are you sure you want to delete!\")) {\n      validTableOfItemArray();\n      const newTableOfItem = tableOfItems.filter((item) => {\n        return item.id !== itemId;\n      });\n\n      localStorage.setItem(\"inventory\", JSON.stringify(newTableOfItem));\n      setTableOfItems(newTableOfItem);\n    }\n  };\n  const editItem = (id) => {\n    setClickedId(String(id));\n  };\n\n  const filterLogic = () => {\n    validTableOfItemArray();\n    if (filterType === \"custom\") {\n      setShowDateFilter(true);\n    } else {\n      setShowDateFilter(false);\n    }\n    if (\n      customDateValue.from !== \"\" &&\n      customDateValue.to !== \"\" &&\n      filterType === \"custom\"\n    ) {\n      const filteredTableRow = tableOfItems.filter((item) => {\n        let actualDate = Date.parse(item.date);\n        let fromDate = Date.parse(customDateValue.from);\n        let toDate = Date.parse(customDateValue.to);\n\n        return (actualDate >= fromDate) & (actualDate <= toDate);\n      });\n      if (filteredTableRow.length > 0) {\n        setTableOfItems(filteredTableRow);\n      }\n      return;\n    }\n    if (filterType === \"today\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let day = new Date(item.date).getDate();\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n          return (\n            actualTime.getDate() === day &&\n            actualTime.getMonth() === month &&\n            actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"yesterday\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let day = new Date(item.date).getDate();\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n          return (\n            actualTime.getDate() - 1 === day &&\n            actualTime.getMonth() === month &&\n            actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"thisWeek\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let day = new Date(item.date).getDate();\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n          //\n          function endOfWeek(date) {\n            let lastday = date.getDate() - (date.getDay() - 1) + 6;\n            return new Date(date.setDate(lastday));\n          }\n          function getLastWeeksDate() {\n            const now = new Date();\n            let start = now.getDay();\n            return new Date(\n              now.getFullYear(),\n              now.getMonth(),\n              now.getDate() - start\n            );\n          }\n          const weekstart = getLastWeeksDate().getDate();\n          const weekend = endOfWeek(getLastWeeksDate()).getDate();\n          //\n          return (\n            weekstart <= day &&\n            weekend >= day &&\n            actualTime.getMonth() === month &&\n            actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"lastWeek\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let day = new Date(item.date).getDate();\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n          //\n          function endOfWeek(date) {\n            let lastday = date.getDate() - (date.getDay() - 1) + 6;\n            return new Date(date.setDate(lastday));\n          }\n          function getLastWeeksDate() {\n            const now = new Date();\n            let start = now.getDay();\n            return new Date(\n              now.getFullYear(),\n              now.getMonth(),\n              now.getDate() - 7 - start\n            );\n          }\n          const weekstart = getLastWeeksDate().getDate();\n          const weekend = endOfWeek(getLastWeeksDate()).getDate();\n          //\n          return (\n            weekstart <= day &&\n            weekend >= day &&\n            actualTime.getMonth() === month &&\n            actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"thisMonth\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n\n          return (\n            actualTime.getMonth() === month && actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"lastMonth\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n\n          return (\n            actualTime.getMonth() - 1 === month &&\n            actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"select\") {\n      validTableOfItemArray();\n      setTableOfItems(tableOfItems);\n      return;\n    }\n  };\n\n  useEffect(() => {\n    filterLogic();\n  }, [filterType, customDateValue]);\n\n  return (\n    <div className=\"container\" style={heightStyle}>\n      {/* modal */}\n      <div\n        className=\"modal fade\"\n        id=\"staticBackdrop\"\n        data-bs-backdrop=\"static\"\n        data-bs-keyboard=\"false\"\n        tabIndex={-1}\n        aria-labelledby=\"staticBackdropLabel\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-body\">\n              <div className=\"row my-2\">\n                <div className=\"col-3\">\n                  <label htmlFor=\"name\" className=\"form-label\">\n                    Item Name\n                  </label>\n                </div>\n                <div className=\"col-9\">\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    autoComplete=\"off\"\n                    className=\"form-control\"\n                    value={newItem.name}\n                    onChange={(e) => {\n                      setNewItem({\n                        ...newItem,\n                        name: e.target.value,\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"row my-2\">\n                <div className=\"col-3\">\n                  <label htmlFor=\"price\" className=\"form-label\">\n                    Price\n                  </label>\n                </div>\n                <div className=\"col-9\">\n                  <input\n                    type=\"number\"\n                    autoComplete=\"off\"\n                    id=\"price\"\n                    className=\"form-control\"\n                    value={parseInt(newItem.price)}\n                    onChange={(e) => {\n                      setNewItem({\n                        ...newItem,\n                        price: parseInt(e.target.value),\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"row my-2\">\n                <div className=\"col-3\">\n                  <label htmlFor=\"address\" className=\"form-label\">\n                    Purchase Quantity\n                  </label>\n                </div>\n                <div className=\"col-9\">\n                  <input\n                    type=\"number\"\n                    autoComplete=\"off\"\n                    id=\"address\"\n                    className=\"form-control\"\n                    value={parseInt(newItem.purchaseQuantity)}\n                    onChange={(e) => {\n                      setNewItem({\n                        ...newItem,\n                        purchaseQuantity: parseInt(e.target.value),\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"modal-footer d-flex justify-content-center\">\n              <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                onClick={handleTableOfItems}\n              >\n                Add\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-bs-dismiss=\"modal\"\n                onClick={resetValues}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* modal*/}\n      <div>\n        <div className=\"row pt-3\">\n          <div style={{ position: \"absolute\", left: \"2rem\", top: \"1rem\" }}>\n            <Link to=\"/\">\n              <i\n                className=\"fa fa-home text-light bg-primary p-2 border border-dark rounded \"\n                aria-hidden=\"true\"\n                style={{ cursor: \"pointer\" }}\n              ></i>\n            </Link>\n          </div>\n          <div className=\"col text-center\">\n            <h3>Inventory</h3>\n          </div>\n        </div>\n        <div className=\"row mt-3 justify-content-center\">\n          <div className=\"col-3\">\n            <label htmlFor=\"filter\" className=\"pe-1\">\n              Filter By:{\" \"}\n            </label>\n            <select\n              name=\"day\"\n              id=\"filter\"\n              onChange={(e) => setFilterType(e.target.value)}\n            >\n              <option value=\"select\">--Select--</option>\n              <option value=\"today\">Today</option>\n              <option value=\"yesterday\">Yesterday</option>\n              <option value=\"thisWeek\">This Week</option>\n              <option value=\"lastWeek\">Last Week</option>\n              <option value=\"thisMonth\">This Month</option>\n              <option value=\"lastMonth\">Last Month</option>\n              <option value=\"custom\">Custom</option>\n            </select>\n          </div>\n          {showDateFilter && (\n            <>\n              <div className=\"col-3\">\n                <label htmlFor=\"from\" className=\"pe-1\">\n                  From\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"from\"\n                  value={customDateValue.from}\n                  onChange={(e) => {\n                    setCustomDateValues((prev) => {\n                      return { ...prev, from: e.target.value };\n                    });\n                  }}\n                />\n              </div>\n              <div className=\"col-3\">\n                <label htmlFor=\"to\" className=\"pe-1\">\n                  To\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"to\"\n                  value={customDateValue.to}\n                  onChange={(e) => {\n                    setCustomDateValues((prev) => {\n                      return { ...prev, to: e.target.value };\n                    });\n                  }}\n                />\n              </div>\n            </>\n          )}\n\n          <div className=\"col-3\">\n            <button\n              className=\"btn btn-success\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#staticBackdrop\"\n            >\n              Add Items\n            </button>\n          </div>\n        </div>\n\n        <div className=\"row mt-3\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Item Name</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">Purchase</th>\n                <th scope=\"col\">Sold</th>\n                <th scope=\"col\">In-Stock</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!tableOfItems | (tableOfItems.length === 0) ? (\n                <tr>\n                  <td className=\"mt-4 text-center\" colSpan={6}>\n                    <h3>No Items Found</h3>\n                  </td>\n                </tr>\n              ) : (\n                tableOfItems &&\n                tableOfItems.map((tr, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>{tr.name}</td>\n                      <td>{tr.price}</td>\n                      <td>{tr.purchaseQuantity}</td>\n                      <td>{tr.sold}</td>\n                      <td>{tr.inStock}</td>\n                      <td>\n                        <button\n                          className=\"btn btn-warning py-1\"\n                          onClick={() => {\n                            editItem(tr.id);\n                            navigate(\"/inventory/edit\");\n                          }}\n                        >\n                          Edit\n                        </button>\n                      </td>\n                      <td>\n                        <button\n                          className=\"btn btn-danger py-1\"\n                          onClick={() => deleteItem(tr.id)}\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })\n              )}\n              {}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Inventory;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction SalesReportPage1() {\n  const [showDateFilter, setShowDateFilter] = useState(false);\n  const [filterType, setFilterType] = useState(\"select\");\n  const [customDateValue, setCustomDateValues] = useState({\n    from: \"\",\n    to: \"\",\n  });\n\n  let [tableOfItems, setTableOfItems] = useState(\n    []\n    // ...JSON.parse( localStorage.getItem( \"salesReport\" ) ),\n  );\n\n  const validTableOfItemArray = () => {\n    const newTableOfItem = JSON.parse(localStorage.getItem(\"salesReport\"));\n    if (newTableOfItem) {\n      tableOfItems = [...newTableOfItem];\n    }\n  };\n\n  useEffect(() => {\n    validTableOfItemArray();\n  }, []);\n\n  const heightStyle = {\n    minHeight: \"100vh\",\n  };\n\n  const filterLogic = () => {\n    validTableOfItemArray();\n    if (filterType === \"custom\") {\n      setShowDateFilter(true);\n    } else {\n      setShowDateFilter(false);\n    }\n    if (\n      customDateValue.from !== \"\" &&\n      customDateValue.to !== \"\" &&\n      filterType === \"custom\"\n    ) {\n      const filteredTableRow = tableOfItems.filter((item) => {\n        let actualDate = Date.parse(item.date);\n        let fromDate = Date.parse(customDateValue.from);\n        let toDate = Date.parse(customDateValue.to);\n\n        return (actualDate >= fromDate) & (actualDate <= toDate);\n      });\n      if (filteredTableRow.length > 0) {\n        setTableOfItems(filteredTableRow);\n      }\n      return;\n    }\n    if (filterType === \"today\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let day = new Date(item.date).getDate();\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n          return (\n            actualTime.getDate() === day &&\n            actualTime.getMonth() === month &&\n            actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"yesterday\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let day = new Date(item.date).getDate();\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n          return (\n            actualTime.getDate() - 1 === day &&\n            actualTime.getMonth() === month &&\n            actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"thisWeek\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let day = new Date(item.date).getDate();\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n          //\n          function endOfWeek(date) {\n            let lastday = date.getDate() - (date.getDay() - 1) + 6;\n            return new Date(date.setDate(lastday));\n          }\n          function getLastWeeksDate() {\n            const now = new Date();\n            let start = now.getDay();\n            return new Date(\n              now.getFullYear(),\n              now.getMonth(),\n              now.getDate() - start\n            );\n          }\n          const weekstart = getLastWeeksDate().getDate();\n          const weekend = endOfWeek(getLastWeeksDate()).getDate();\n          //\n          return (\n            weekstart <= day &&\n            weekend >= day &&\n            actualTime.getMonth() === month &&\n            actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"lastWeek\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let day = new Date(item.date).getDate();\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n          //\n          function endOfWeek(date) {\n            let lastday = date.getDate() - (date.getDay() - 1) + 6;\n            return new Date(date.setDate(lastday));\n          }\n          function getLastWeeksDate() {\n            const now = new Date();\n            let start = now.getDay();\n            return new Date(\n              now.getFullYear(),\n              now.getMonth(),\n              now.getDate() - 7 - start\n            );\n          }\n          const weekstart = getLastWeeksDate().getDate();\n          const weekend = endOfWeek(getLastWeeksDate()).getDate();\n          //\n          return (\n            weekstart <= day &&\n            weekend >= day &&\n            actualTime.getMonth() === month &&\n            actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"thisMonth\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n\n          return (\n            actualTime.getMonth() === month && actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"lastMonth\") {\n      setTableOfItems(\n        tableOfItems.filter((item) => {\n          let month = new Date(item.date).getMonth();\n          let year = new Date(item.date).getFullYear();\n          let actualTime = new Date();\n\n          return (\n            actualTime.getMonth() - 1 === month &&\n            actualTime.getFullYear() === year\n          );\n        })\n      );\n      return;\n    }\n    if (filterType === \"select\") {\n      validTableOfItemArray();\n      setTableOfItems(tableOfItems);\n      return;\n    }\n  };\n\n  useEffect(() => {\n    filterLogic();\n  }, [filterType, customDateValue]);\n\n  return (\n    <div className=\"container\" style={heightStyle}>\n      <div>\n        <div className=\"row pt-3\">\n          <div style={{ position: \"absolute\", left: \"2rem\", top: \"1rem\" }}>\n            <Link to=\"/\">\n              <i\n                className=\"fa fa-home text-light bg-primary p-2 border border-dark rounded \"\n                aria-hidden=\"true\"\n                style={{ cursor: \"pointer\" }}\n              ></i>\n            </Link>\n          </div>\n          <div className=\"col text-center\">\n            <h3>Sales Report</h3>\n          </div>\n        </div>\n        <div className=\"row mt-3 justify-content-center\">\n          <div className=\"col-3\">\n            <label htmlFor=\"filter\" className=\"pe-1 form-group\">\n              Filter By:{\" \"}\n            </label>\n            <select\n              className=\"form-group\"\n              name=\"day\"\n              id=\"filter\"\n              onChange={(e) => setFilterType(e.target.value)}\n            >\n              <option value=\"select\">--Select--</option>\n              <option value=\"today\">Today</option>\n              <option value=\"yesterday\">Yesterday</option>\n              <option value=\"thisWeek\">This Week</option>\n              <option value=\"lastWeek\">Last Week</option>\n              <option value=\"thisMonth\">This Month</option>\n              <option value=\"lastMonth\">Last Month</option>\n              <option value=\"custom\">Custom</option>\n            </select>\n          </div>\n          {showDateFilter && (\n            <>\n              <div className=\"col-3\">\n                <label htmlFor=\"from\" className=\"pe-1\">\n                  From\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"from\"\n                  value={customDateValue.from}\n                  onChange={(e) => {\n                    setCustomDateValues((prev) => {\n                      return { ...prev, from: e.target.value };\n                    });\n                  }}\n                />\n              </div>\n              <div className=\"col-3\">\n                <label htmlFor=\"to\" className=\"pe-1\">\n                  To\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"to\"\n                  value={customDateValue.to}\n                  onChange={(e) => {\n                    setCustomDateValues((prev) => {\n                      return { ...prev, to: e.target.value };\n                    });\n                  }}\n                />\n              </div>\n            </>\n          )}\n        </div>\n\n        <div className=\"row mt-3\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Item Name</th>\n                <th scope=\"col\">Sold Quantity</th>\n                <th scope=\"col\">Total Price</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!tableOfItems | (tableOfItems.length === 0) ? (\n                <tr>\n                  <td className=\"mt-4 text-center\" colSpan={4}>\n                    <h3>No Items Found</h3>\n                  </td>\n                </tr>\n              ) : (\n                tableOfItems &&\n                tableOfItems.map((tr, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>{tr.name}</td>\n                      <td>{tr.soldQuantity}</td>\n                      <td>$ {tr.totalPrice}</td>\n                    </tr>\n                  );\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SalesReportPage1;\n","import React, { Component } from \"react\";\nimport { Link, Navigate } from \"react-router-dom\";\n\nexport default class Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      price: 0,\n      quantity: 0,\n      inStock: 0,\n      sold: 0,\n      clickedId: parseInt(this.props.clickedId)\n        ? parseInt(this.props.clickedId)\n        : 0,\n      submitted: false,\n    };\n  }\n  componentDidMount() {\n    const newTableOfItem = JSON.parse(localStorage.getItem(\"inventory\"));\n    if (newTableOfItem) {\n      const row = newTableOfItem.filter((item) => {\n        return item.id === this.state.clickedId;\n      });\n      if (row[0]) {\n        const { name, price, purchaseQuantity, inStock, sold } = row[0];\n        console.log(name, price, purchaseQuantity);\n        this.setState({\n          name: name,\n          price: price,\n          quantity: purchaseQuantity,\n          inStock: inStock,\n          sold: sold,\n        });\n      }\n    }\n  }\n\n  handleSave = () => {\n    if (\n      this.state.name === \"\" ||\n      this.state.name === \" \" ||\n      this.state.name === \"null\" ||\n      (this.state.price && this.state.price <= 0) ||\n      !this.state.price\n    ) {\n      this.setState({\n        submitted: false,\n      });\n      alert(\"Please Enter Correct Values !\");\n      return false;\n    }\n\n    const newTableOfItem = JSON.parse(localStorage.getItem(\"inventory\"));\n    if (newTableOfItem) {\n      const oldValues = newTableOfItem.filter(\n        (item) => item.id !== this.state.clickedId\n      );\n      let modifyValues = newTableOfItem.filter(\n        (item) => item.id === this.state.clickedId\n      );\n      modifyValues[0].name = this.state.name;\n      modifyValues[0].price = this.state.price;\n      if (oldValues) {\n        const finalizedData = [...oldValues, ...modifyValues];\n        localStorage.setItem(\"inventory\", JSON.stringify(finalizedData));\n        console.log(finalizedData);\n      } else {\n        const finalizedData = [...modifyValues];\n        localStorage.setItem(\"inventory\", JSON.stringify(finalizedData));\n        console.log(finalizedData);\n      }\n      this.setState({\n        submitted: true,\n      });\n    }\n  };\n\n  style = {\n    maxWidth: \"97vw\",\n    minHeight: \"100vh\",\n  };\n\n  render() {\n    return (\n      <div style={this.style}>\n        <h1 className=\"text-center\">Edit</h1>\n        <div className=\"row justify-content-center mt-5\">\n          <div\n            className=\"col-5\"\n            style={{\n              boxShadow: \"0 0 1em #000\",\n              padding: \"1em\",\n              borderRadius: \".4em\",\n            }}\n          >\n            <div className=\"row my-2\">\n              <div className=\"col-3\">\n                <label htmlFor=\"name\" className=\"form-label\">\n                  Item Name\n                </label>\n              </div>\n              <div className=\"col-9\">\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  autoComplete=\"off\"\n                  className=\"form-control\"\n                  value={this.state.name && this.state.name}\n                  onChange={(e) => {\n                    this.setState({\n                      name: e.target.value && e.target.value,\n                    });\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"row my-2\">\n              <div className=\"col-3\">\n                <label htmlFor=\"price\" className=\"form-label\">\n                  Price\n                </label>\n              </div>\n              <div className=\"col-9\">\n                <input\n                  type=\"number\"\n                  autoComplete=\"off\"\n                  id=\"price\"\n                  className=\"form-control\"\n                  value={this.state.price}\n                  onChange={(e) => {\n                    this.setState({\n                      price: parseInt(e.target.value)\n                        ? parseInt(e.target.value)\n                        : 0,\n                    });\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"row my-2\">\n              <div className=\"col-3\">\n                <label htmlFor=\"address\" className=\"form-label\">\n                  Purchase Quantity\n                </label>\n              </div>\n              <div className=\"col-9\">\n                <input\n                  readOnly\n                  type=\"number\"\n                  autoComplete=\"off\"\n                  id=\"address\"\n                  className=\"form-control\"\n                  value={this.state.quantity}\n                  onChange={(e) => {\n                    this.setState({\n                      purchaseQuantity: parseInt(e.target.value)\n                        ? parseInt(e.target.value)\n                        : 0,\n                    });\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-3\">\n                <label htmlFor=\"sold\" className=\"form-label\">\n                  Sold\n                </label>\n              </div>\n              <div className=\"col-9\">\n                <input\n                  readOnly\n                  type=\"text\"\n                  id=\"sold\"\n                  autoComplete=\"off\"\n                  className=\"form-control\"\n                  value={this.state.sold}\n                  onChange={(e) => {\n                    this.setState({\n                      sold: parseInt(e.target.value)\n                        ? parseInt(e.target.value)\n                        : 0,\n                    });\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-3\">\n                <label htmlFor=\"Instock\" className=\"form-label\">\n                  In Stock\n                </label>\n              </div>\n              <div className=\"col-9\">\n                <input\n                  readOnly\n                  type=\"text\"\n                  id=\"Instock\"\n                  autoComplete=\"off\"\n                  className=\"form-control\"\n                  value={this.state.inStock}\n                  onChange={(e) => {\n                    this.setState({\n                      inStock: parseInt(e.target.value)\n                        ? parseInt(e.target.value)\n                        : 0,\n                    });\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"row my-3 justify-content-center\">\n              <span className=\"col-3\">\n                <Link to=\"/inventory\">\n                  <button className=\"btn btn-danger col-12\">Cancel</button>\n                </Link>\n              </span>\n              {this.state.submitted && <Navigate to={\"/inventory\"} />}\n              <span className=\"col-3\">\n                <button\n                  className=\"btn btn-success col-12\"\n                  disabled={this.disableSaveBtn}\n                  onClick={() => {\n                    this.handleSave();\n                  }}\n                >\n                  Save\n                </button>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState, createContext } from 'react'\n\nimport { Route, Routes } from \"react-router-dom\";\n\nimport ItemRequestPage from \"./components/itemrequest/ItemRequestPage\";\nimport MainMenuPage from './components/mainmenupage/MainMenuPage';\nimport Billing from './components/billing/Billing'\nimport Inventory from './components/inventory/Inventory'\nimport SalesReportPage1 from './components/salesreport/SalesReportPage1.jsx'\nimport Edit from './components/inventory/Edit';\n\n\nexport const InventoryContext = createContext();\n\nfunction App () {\n  const [ tableOfItems, setTableOfItems ] = useState( [] );\n  const [ clickedId, setClickedId ] = useState( '' );\n  const style = {\n    backgroundColor: '#aaaeb1af',\n    minHeight: '97.8vh',\n    width: '99.9vw',\n  };\n\n  return (\n    <div className=\"App\" style={ style }>\n      <InventoryContext.Provider value={ { tableOfItems, setTableOfItems, setClickedId } }>\n\n        <Routes>\n          <Route path='/' element={ <MainMenuPage /> } />\n          <Route path='/billing' element={ <Billing /> } />\n          <Route path='/inventory' element={ <Inventory /> } />\n          <Route path='/itemrequest' element={ <ItemRequestPage /> } />\n          <Route path='/salesreport' element={ <SalesReportPage1 /> } />\n          <Route path='/inventory/edit' element={ <Edit clickedId={ clickedId } /> } />\n        </Routes>\n\n      </InventoryContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// ? bootstrap links\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot( document.getElementById( 'root' ) );\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}